<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.RepertoryOutMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.RepertoryOut" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="go_to_warehouse_id" property="goToWarehouseId" jdbcType="INTEGER" />
    <result column="ref_type" property="refType" jdbcType="VARCHAR" />
    <result column="out_date" property="outDate" jdbcType="DATE" />
    <result column="ref_order_id" property="refOrderId" jdbcType="BIGINT" />
    <result column="ref_order_number" property="refOrderNumber" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="customer_rep_id" property="customerRepId" jdbcType="INTEGER" />
    <result column="customer_rep_name" property="customerRepName" jdbcType="VARCHAR" />
    <result column="go_to" property="goTo" jdbcType="VARCHAR" />
    <result column="total_quantity" property="totalQuantity" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="make_order_user" property="makeOrderUser" jdbcType="VARCHAR" />
    <result column="review_order_user" property="reviewOrderUser" jdbcType="VARCHAR" />
    <result column="review_order_result" property="reviewOrderResult" jdbcType="VARCHAR" />
    <result column="check_order_user" property="checkOrderUser" jdbcType="VARCHAR" />
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
    <result column="file_no" property="fileNo" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="OutListResultMap" type="com.yiban.erp.entities.RepertoryOutList">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="repertoryOutId" property="repertoryOutId" jdbcType="BIGINT" />
    <result column="warehouseId" property="warehouseId" jdbcType="INTEGER" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
    <result column="origin" property="origin" jdbcType="VARCHAR" />
    <result column="unitName" property="unitName" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="outAmount" property="outAmount" jdbcType="INTEGER" />
    <result column="buyPrice" property="buyPrice" jdbcType="DECIMAL" />
    <result column="batchCode" property="batchCode" jdbcType="VARCHAR" />
    <result column="expDate" property="expDate" jdbcType="TIMESTAMP" />
    <result column="refOrderNumber" property="refOrderNumber" jdbcType="VARCHAR" />
    <result column="outDate" property="outDate" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="customerName" property="customerName" jdbcType="VARCHAR" />
    <result column="goToLocation" property="goToLocation" jdbcType="VARCHAR" />
    <result column="goToWarehouseId" property="goToWarehouseId" jdbcType="INTEGER" />
    <result column="specOneId" property="goods.specOneId" jdbcType="BIGINT"/>
    <result column="specOneName" property="goods.specOneName" jdbcType="VARCHAR"/>
    <result column="specTwoId" property="goods.specTwoId" jdbcType="BIGINT"/>
    <result column="specTwoName" property="goods.specTwoName" jdbcType="VARCHAR"/>
    <result column="specThreeId" property="goods.specThreeId" jdbcType="BIGINT"/>
    <result column="specThreeName" property="goods.specThreeName" jdbcType="VARCHAR"/>
    <!--<association property="goods" column="goods_info_id" javaType="GOODS" resultMap="goodsResult"/>-->
  </resultMap>
  <!--<resultMap id="goodsResult">

  </resultMap>-->
  <sql id="Base_Column_List" >
    id, company_id, warehouse_id,go_to_warehouse_id, ref_type,status, out_date, ref_order_id, ref_order_number,
    customer_id, customer_name, customer_rep_id, customer_rep_name, go_to, total_quantity, 
    total_amount, make_order_user, check_order_user, check_date, file_no, comment, created_by, 
    updated_by, created_time, updated_time
  </sql>

  <sql id="listSql" >
      o.id as id,o.out_date as outDate, o.company_id as companyId,o.warehouse_id as warehouseId, o.status as status,
      o.go_to_warehouse_id as goToWarehouseId,o.ref_type as refType,o.ref_order_id as refOrderId,
      o.ref_order_number as refOrderNumber,o.out_date as outDate,  o.customer_id as customerId,
      o.customer_name as customerName,o.customer_rep_id as customerRepId,o.customer_rep_name as customerRepName,
      o.go_to as `goTo`, o.total_quantity as totalQuantity,o.total_amount as totalAmount,
      o.make_order_user as makeOrderUser ,o.check_order_user as checkOrderUser,o.check_date as checkDate,
      o.file_no as fileNo, o.comment as comment,o.created_by as createdBy,o.updated_by as updatedBy,
      o.created_time as createdTime,o.updated_time as updatedTime, w.name as warehouseName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from repertory_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repertory_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yiban.erp.entities.RepertoryOut" keyProperty="id" useGeneratedKeys="true">
    insert into repertory_out (company_id, warehouse_id,go_to_warehouse_id,
      ref_type,status, out_date, ref_order_id,
      ref_order_number, customer_id, customer_name, 
      customer_rep_id, customer_rep_name, go_to, 
      total_quantity, total_amount, make_order_user, 
      check_order_user, check_date, file_no, 
      comment, created_by, updated_by, 
      created_time, updated_time)
    values (#{companyId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER}, #{goToWarehouseId,jdbcType=INTEGER},
      #{refType,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},  #{outDate,jdbcType=DATE}, #{refOrderId,jdbcType=BIGINT},
      #{refOrderNumber,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR},
      #{customerRepId,jdbcType=INTEGER}, #{customerRepName,jdbcType=VARCHAR}, #{goTo,jdbcType=VARCHAR}, 
      #{totalQuantity,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{makeOrderUser,jdbcType=VARCHAR},
      #{checkOrderUser,jdbcType=VARCHAR}, #{checkDate,jdbcType=TIMESTAMP}, #{fileNo,jdbcType=VARCHAR},
      #{comment,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yiban.erp.entities.RepertoryOut" >
    update repertory_out
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="goToWarehouseId != null" >
        go_to_warehouse_id = #{goToWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="refType != null" >
        ref_type = #{refType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null" >
        out_date = #{outDate,jdbcType=DATE},
      </if>
      <if test="refOrderId != null" >
        ref_order_id = #{refOrderId,jdbcType=BIGINT},
      </if>
      <if test="refOrderNumber != null" >
        ref_order_number = #{refOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerRepId != null" >
        customer_rep_id = #{customerRepId,jdbcType=INTEGER},
      </if>
      <if test="customerRepName != null" >
        customer_rep_name = #{customerRepName,jdbcType=VARCHAR},
      </if>
      <if test="goTo != null" >
        go_to = #{goTo,jdbcType=VARCHAR},
      </if>
      <if test="totalQuantity != null" >
        total_quantity = #{totalQuantity,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="makeOrderUser != null" >
        make_order_user = #{makeOrderUser,jdbcType=VARCHAR},
      </if>
      <if test="reviewOrderUser != null" >
        review_order_user = #{reviewOrderUser,jdbcType=VARCHAR},
      </if>
      <if test="reviewOrderResult != null" >
        review_order_result = #{reviewOrderResult,jdbcType=VARCHAR},
      </if>
      <if test="checkOrderUser != null" >
        check_order_user = #{checkOrderUser,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileNo != null" >
        file_no = #{fileNo,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="getList" parameterType="com.yiban.erp.dto.ReceiveListReq" resultType="com.yiban.erp.entities.RepertoryOut">
    select
    <include refid="listSql"/>
    from repertory_out o, warehouse w
    where  o.warehouse_id = w.id
    and o.company_id = #{companyId}
    and o.status != 'DELETE'
    <if test="warehouseId != null">
    and o.warehouse_id = #{warehouseId}
    </if>
    <if test="startReceiveDate != null">
      and o.created_time >= #{startReceiveDate}
    </if>
    <if test="endReceiveDate != null">
      and o.created_time &lt;= #{endReceiveDate}
    </if>
    <if test="statusList != null" >
      and o.status in
      <foreach collection="statusList" item="item" open="(" close=")" separator=", ">
        #{item}
      </foreach>
    </if>
  </select>


  <select id="getOutListById"  parameterType="map" resultType="com.yiban.erp.entities.RepertoryOut">
    select
    <include refid="listSql"/>,c_req.contact_phone as customerTel
    from repertory_out o, warehouse w,customer_rep c_req
    where  o.warehouse_id = w.id and o.customer_rep_id =c_req.id
    and o.id in
    <foreach collection="ids" item="item" open="(" close=")" separator=", ">
      #{item}
    </foreach>
  </select>

  <select id = "getOutListDamage" resultMap="OutListResultMap">
    select r.id as id,ro.id as repertoryOutId, w.id as warehouseId,w.name as warehouseName,r.location, gi.name as goodsName, gi.origin as origin,gd.spec_one_id as specOneId,gsone.spec_name as specOneName,gd.spec_two_id as specTwoId, gstwo.spec_name as specTwoName,gd.spec_three_id as specThreeId, gsthree.spec_name as specThreeName,
            gi.unit as unitName, r.quantity as quantity, rod.quantity as outAmount, rod.price as buyPrice, r.batch_code as batchCode, r.exp_date as expDate, ro.ref_order_number as refOrderNumber, ro.out_date as outDate,
            ro.comment as comment
    from repertory_info as r
          left join goods_detail as gd on gd.id = r.goods_id
          left join goods_spec as gsone on gd.spec_one_id = gsone.id
          left join goods_spec as gstwo on gd.spec_two_id = gstwo.id
          left join goods_spec as gsthree on gd.spec_three_id = gsthree.id
          left join  goods_info as gi on gi.id = gd.goods_info_id
          left join repertory_out_detail as rod on rod.repertory_info_id = r.id
          left join warehouse as w on r.warehouse_id = w.id
          left join repertory_out as ro on rod.repertory_out_id = ro.id
    where ro.id = #{id}
  </select>
  <select id="getOutListChange" resultMap="OutListResultMap">
    select r.id as id,ro.id as repertoryOutId, w.id as warehouseId,w.name as warehouseName,r.location, gi.name as goodsName, gi.origin as origin,gd.spec_one_id as specOneId,gsone.spec_name as specOneName,gd.spec_two_id as specTwoId, gstwo.spec_name as specTwoName,gd.spec_three_id as specThreeId, gsthree.spec_name as specThreeName,
            gi.unit as unitName, r.quantity as quantity, rod.quantity as outAmount, rod.location as goToLocation, rod.price as buyPrice, r.batch_code as batchCode, r.exp_date as expDate, ro.ref_order_number as refOrderNumber, ro.out_date as outDate,
            ro.comment as comment, ro.customer_name as customerName, ro.go_to_warehouse_id as goToWarehouseId
    from repertory_info as r
          left join goods_detail as gd on gd.id = r.goods_id
          left join goods_spec as gsone on gd.spec_one_id = gsone.id
          left join goods_spec as gstwo on gd.spec_two_id = gstwo.id
          left join goods_spec as gsthree on gd.spec_three_id = gsthree.id
          left join  goods_info as gi on gi.id = gd.goods_info_id
          left join repertory_out_detail as rod on rod.repertory_info_id = r.id
          left join warehouse as w on r.warehouse_id = w.id
          left join repertory_out as ro on rod.repertory_out_id = ro.id
    where ro.id = #{id}
  </select>
  <update id="deleteOrder">
    update repertory_out set status ="DELETE" where id=#{id}
  </update>
</mapper>