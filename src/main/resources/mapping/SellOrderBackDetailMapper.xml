<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.SellOrderBackDetailMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.SellOrderBackDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="back_order_id" property="backOrderId" jdbcType="BIGINT" />
    <result column="sell_detail_id" property="sellDetailId" jdbcType="BIGINT" />
    <result column="repertory_id" property="repertoryId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="back_quantity" property="backQuantity" jdbcType="DECIMAL" />
    <result column="right_quantity" property="rightQuantity" jdbcType="DECIMAL" />
    <result column="bad_quantity" property="badQuantity" jdbcType="DECIMAL" />
    <result column="back_price" property="backPrice" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="cost_amount" property="costAmount" jdbcType="DECIMAL" />
    <result column="batch_code" property="batchCode" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="exp_date" property="expDate" jdbcType="DATE" />
    <result column="product_date" property="productDate" jdbcType="DATE" />
    <result column="tax_rate" property="taxRate" jdbcType="DECIMAL" />
    <result column="bad_plan" property="badPlan" jdbcType="VARCHAR" />
    <result column="bad_reason" property="badReason" jdbcType="VARCHAR"/>
    <result column="check_status" property="checkStatus" jdbcType="BIT" />
    <result column="check_temp_method" property="checkTempMethod" jdbcType="BIGINT"/>
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="check_user" property="checkUser" jdbcType="VARCHAR" />
    <result column="check_result" property="checkResult" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, back_order_id, sell_detail_id, repertory_id, goods_id, back_quantity, right_quantity, bad_quantity,
    back_price, amount, cost_amount, batch_code, location, exp_date, product_date, tax_rate,
    bad_plan, bad_reason, check_status, check_temp_method, check_time, check_user, check_result,
    created_by, updated_by, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sell_order_back_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sell_order_back_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByBackOrderId" parameterType="java.lang.Long">
    delete from sell_order_back_detail where back_order_id = #{backOrderId}
  </delete>

  <insert id="insert" parameterType="com.yiban.erp.entities.SellOrderBackDetail" keyProperty="id" useGeneratedKeys="true">
    insert into sell_order_back_detail (back_order_id, sell_detail_id, repertory_id,
      goods_id, back_quantity, right_quantity, 
      bad_quantity, back_price, amount, 
      cost_amount, batch_code, location, 
      exp_date, product_date, tax_rate,
      bad_plan, bad_reason,
      check_status, check_temp_method, check_time, check_user, check_result,
      created_by, updated_by, created_time, 
      updated_time)
    values (#{backOrderId,jdbcType=BIGINT}, #{sellDetailId,jdbcType=BIGINT}, #{repertoryId,jdbcType=BIGINT},
      #{goodsId,jdbcType=BIGINT}, #{backQuantity,jdbcType=DECIMAL}, #{rightQuantity,jdbcType=DECIMAL}, 
      #{badQuantity,jdbcType=DECIMAL}, #{backPrice,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, 
      #{costAmount,jdbcType=DECIMAL}, #{batchCode,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{expDate,jdbcType=DATE}, #{productDate,jdbcType=DATE}, #{taxRate,jdbcType=DECIMAL},
      #{badPlan,jdbcType=VARCHAR}, #{badReason,jdbcType=VARCHAR},
      #{checkStatus,jdbcType=BIT}, #{checkTempMethod,jdbcType=BIGINT}, #{checkTime,jdbcType=TIMESTAMP},
      #{checkUser,jdbcType=VARCHAR}, #{checkResult,jdbcType=VARCHAR},
      #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertBatch" parameterType="map" keyProperty="id" useGeneratedKeys="true">
    insert into sell_order_back_detail (back_order_id, sell_detail_id, repertory_id,
      goods_id, back_quantity, right_quantity,
      bad_quantity, back_price, amount,
      cost_amount, batch_code, location,
      exp_date, product_date, tax_rate,
      bad_plan, bad_reason,
      check_status, check_temp_method, check_time, check_user, check_result,
      created_by, updated_by, created_time,
      updated_time)
    values
    <foreach collection="details" item="item" separator="), (" open="(" close=")">
      #{item.backOrderId,jdbcType=BIGINT}, #{item.sellDetailId,jdbcType=BIGINT}, #{item.repertoryId,jdbcType=BIGINT},
      #{item.goodsId,jdbcType=BIGINT}, #{item.backQuantity,jdbcType=DECIMAL}, #{item.rightQuantity,jdbcType=DECIMAL},
      #{item.badQuantity,jdbcType=DECIMAL}, #{item.backPrice,jdbcType=DECIMAL}, #{item.amount,jdbcType=DECIMAL},
      #{item.costAmount,jdbcType=DECIMAL}, #{item.batchCode,jdbcType=VARCHAR}, #{item.location,jdbcType=VARCHAR},
      #{item.expDate,jdbcType=DATE}, #{item.productDate,jdbcType=DATE}, #{item.taxRate,jdbcType=DECIMAL},
      #{item.badPlan,jdbcType=VARCHAR}, #{item.badReason,jdbcType=VARCHAR},
      #{item.checkStatus,jdbcType=BIT}, #{item.checkTempMethod,jdbcType=BIGINT}, #{item.checkTime,jdbcType=TIMESTAMP},
      #{item.checkUser,jdbcType=VARCHAR}, #{item.checkResult,jdbcType=VARCHAR},
      #{item.createdBy,jdbcType=VARCHAR}, #{item.updatedBy,jdbcType=VARCHAR}, #{item.createdTime,jdbcType=TIMESTAMP},
      #{item.updatedTime,jdbcType=TIMESTAMP}
    </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yiban.erp.entities.SellOrderBackDetail" >
    update sell_order_back_detail
    <set >
      <if test="backOrderId != null" >
        back_order_id = #{backOrderId,jdbcType=BIGINT},
      </if>
      <if test="sellDetailId != null" >
        sell_detail_id = #{sellDetailId,jdbcType=BIGINT},
      </if>
      <if test="repertoryId != null">
        repertory_id = #{repertoryId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="backQuantity != null" >
        back_quantity = #{backQuantity,jdbcType=DECIMAL},
      </if>
      <if test="rightQuantity != null" >
        right_quantity = #{rightQuantity,jdbcType=DECIMAL},
      </if>
      <if test="badQuantity != null" >
        bad_quantity = #{badQuantity,jdbcType=DECIMAL},
      </if>
      <if test="backPrice != null" >
        back_price = #{backPrice,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="costAmount != null" >
        cost_amount = #{costAmount,jdbcType=DECIMAL},
      </if>
      <if test="batchCode != null" >
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="expDate != null" >
        exp_date = #{expDate,jdbcType=DATE},
      </if>
      <if test="productDate != null" >
        product_date = #{productDate,jdbcType=DATE},
      </if>
      <if test="taxRate != null" >
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="badPlan != null" >
        bad_plan = #{badPlan,jdbcType=VARCHAR},
      </if>
      <if test="badReason != null" >
        bad_reason = #{badReason,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=BIT},
      </if>
      <if test="checkTempMethod != null">
        check_temp_method = #{checkTempMethod,jdbcType=BIGINT},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime, jdbcType=TIMESTAMP},
      </if>
      <if test="checkUser != null" >
        check_user = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null" >
        check_result = #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateAlreadyBackQuantity" parameterType="java.lang.Long" >
    update sell_order_detail d
	  set d.back_quantity = (
	    select IFNULL(sum(b.back_quantity), 0)
	    from sell_order_back_detail b, sell_order_back s
	    where b.back_order_id = s.id and s.status != 'DELETE' and b.sell_detail_id = d.id)
    where d.sell_order_id = #{sellOrderId}
  </update>

  <select id="getByBackOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      s.*,
      d.quantity as saleQuantity,
      d.back_quantity as alreadyBackQuantity,
      o.value as checkTempMethodName
    from sell_order_back_detail s
    left join sell_order_detail d on s.sell_detail_id = d.id
    left join options o on s.check_temp_method = o.id
    where back_order_id = #{backOrderId,jdbcType=BIGINT}
  </select>

  <update id="updateCheckStatus" parameterType="com.yiban.erp.dto.SellBackCheck" >
    update sell_order_back_detail
      set
          <if test="rightQuantity != null">
            right_quantity = #{rightQuantity,jdbcType=DECIMAL},
          </if>
          <if test="rightQuantity == null">
            right_quantity = back_quantity,
          </if>
          <if test="badQuantity != null">
            bad_quantity = #{badQuantity,jdbcType=DECIMAL},
          </if>
          <if test="badQuantity == null">
            bad_quantity = 0,
          </if>
          bad_plan = #{badPlan,jdbcType=VARCHAR},
          bad_reason = #{badReason,jdbcType=VARCHAR},
          check_status = #{checkStatus,jdbcType=BIT},
          check_temp_method = #{checkTempMethod,jdbcType=BIGINT},
          check_time = #{checkTime,jdbcType=TIMESTAMP},
          check_user = #{checkUser,jdbcType=VARCHAR},
          check_result = #{checkResult,jdbcType=VARCHAR},
          updated_by = #{updatedBy,jdbcType=VARCHAR},
          updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where 1=1
      <if test="detailId != null">
        and id = #{detailId,jdbcType=BIGINT}
      </if>
      <if test="backOrderId != null">
        and back_order_id = #{backOrderId,jdbcType=BIGINT}
      </if>
      <if test="detailId == null and backOrderId == null">
        and 1 = 2
      </if>
  </update>

  <update id="updateCheckStatusByBackOrderId" parameterType="com.yiban.erp.dto.SellBackCheck" >
    update sell_order_back_detail
      set
          check_status = #{checkStatus,jdbcType=BIT},
          check_temp_method = #{checkTempMethod,jdbcType=BIGINT},
          check_time = #{checkTime,jdbcType=TIMESTAMP},
          check_user = #{checkUser,jdbcType=VARCHAR},
          check_result = #{checkResult,jdbcType=VARCHAR},
          updated_by = #{updatedBy,jdbcType=VARCHAR},
          updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where back_order_id = #{backOrderId,jdbcType=BIGINT}
  </update>

</mapper>