<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.RepertoryInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.RepertoryInfo" >
      <id column="id" property="id" jdbcType="BIGINT" />
      <result column="company_id" property="companyId" jdbcType="INTEGER" />
      <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
      <result column="location" property="location" jdbcType="VARCHAR" />
      <result column="in_user_id" property="inUserId" jdbcType="BIGINT" />
      <result column="batch_code" property="batchCode" jdbcType="VARCHAR" />
      <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
      <result column="factory_id" property="factoryId" jdbcType="BIGINT" />
      <result column="in_quantity" property="inQuantity" jdbcType="DECIMAL" />
      <result column="quantity" property="quantity" jdbcType="DECIMAL" />
      <result column="on_way_quantity" property="onWayQuantity" jdbcType="DECIMAL"/>
      <result column="buy_price" property="buyPrice" jdbcType="DECIMAL" />
      <result column="is_exp" property="isExp" jdbcType="BIT" />
      <result column="sale_enable" property="saleEnable" jdbcType="BIT" />
      <result column="product_date" property="productDate" jdbcType="DATE" />
      <result column="exp_date" property="expDate" jdbcType="DATE" />
      <result column="in_date" property="inDate" jdbcType="TIMESTAMP" />
      <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
      <result column="supplier_contact_id" property="supplierContactId" jdbcType="BIGINT" />
      <result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
      <result column="order_id" property="orderId" jdbcType="BIGINT" />
      <result column="order_detail_id" property="orderDetailId" jdbcType="BIGINT" />
      <result column="sale_sate" property="saleSate" jdbcType="BIT" />
      <result column="create_by" property="createBy" jdbcType="VARCHAR" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
      <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
      <result column="customer_id" property="customerId" jdbcType="BIGINT" />
      <result column="customer_rep_id" property="customerRepId" jdbcType="BIGINT" />
      <result column="sale_id" property="saleId" jdbcType="BIGINT" />
      <result column="back_price" property="backPrice" jdbcType="DECIMAL" />
      <result column="ref_type" property="refType" jdbcType="VARCHAR" />
      <result column="ref_order_id" property="refOrderId" jdbcType="BIGINT"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, warehouse_id, location, in_user_id, batch_code, goods_id, factory_id,
    in_quantity, quantity, on_way_quantity, buy_price, is_exp, sale_enable, product_date, exp_date, in_date,
    supplier_id, supplier_contact_id, buyer_id, order_id, order_detail_id, sale_sate, create_by, create_time,
    update_by, update_time, customer_id, customer_rep_id, sale_id, back_price, ref_type, ref_order_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from repertory_info
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repertory_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yiban.erp.entities.RepertoryInfo" keyProperty="id" useGeneratedKeys="true">
      insert into repertory_info (company_id, warehouse_id,
      location, in_user_id, batch_code,
      goods_id, factory_id, in_quantity,
      quantity, on_way_quantity, buy_price, is_exp,
      sale_enable, product_date, exp_date,
      in_date, supplier_id, supplier_contact_id,
      buyer_id, order_id, order_detail_id, sale_sate,
      create_by, create_time, update_by,
      update_time, customer_id, customer_rep_id, sale_id, back_price, ref_type, ref_order_id)
    values (#{companyId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER},
      #{location,jdbcType=VARCHAR}, #{inUserId,jdbcType=BIGINT}, #{batchCode,jdbcType=VARCHAR},
      #{goodsId,jdbcType=BIGINT}, #{factoryId,jdbcType=BIGINT}, #{inQuantity,jdbcType=DECIMAL},
      #{quantity,jdbcType=DECIMAL}, #{onWayQuantity,jdbcType=DECIMAL}, #{buyPrice,jdbcType=DECIMAL}, #{isExp,jdbcType=BIT},
      #{saleEnable,jdbcType=BIT}, #{productDate,jdbcType=DATE}, #{expDate,jdbcType=DATE},
      #{inDate,jdbcType=TIMESTAMP}, #{supplierId,jdbcType=BIGINT}, #{supplierContactId,jdbcType=BIGINT},
      #{buyerId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderDetailId,jdbcType=BIGINT}, #{saleSate,jdbcType=BIT},
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{customerId,jdbcType=BIGINT}, #{customerRepId,jdbcType=BIGINT},
      #{saleId,jdbcType=BIGINT}, #{backPrice,jdbcType=DECIMAL}, #{refType,jdbcType=VARCHAR}, #{refOrderId,jdbcType=BIGINT})
  </insert>
  <insert id="insertBatch" parameterType="com.yiban.erp.entities.RepertoryInfo" keyProperty="id" useGeneratedKeys="true">
      insert into repertory_info (company_id, warehouse_id,
      location, in_user_id, batch_code,
      goods_id, factory_id, in_quantity,
      quantity, on_way_quantity, buy_price, is_exp,
      sale_enable, product_date, exp_date,
      in_date, supplier_id, supplier_contact_id,
      buyer_id, order_id, order_detail_id, sale_sate,
      create_by, create_time, update_by,
      update_time, customer_id, customer_rep_id, sale_id, back_price, ref_type, ref_order_id)
    values
    <foreach collection="list" item="item" separator="), (" open="(" close=")">
        #{item.companyId,jdbcType=INTEGER}, #{item.warehouseId,jdbcType=INTEGER},
        #{item.location,jdbcType=VARCHAR}, #{item.inUserId,jdbcType=BIGINT}, #{item.batchCode,jdbcType=VARCHAR},
        #{item.goodsId,jdbcType=BIGINT}, #{item.factoryId,jdbcType=BIGINT}, #{item.inQuantity,jdbcType=DECIMAL},
        #{item.quantity,jdbcType=DECIMAL}, #{item.onWayQuantity,jdbcType=DECIMAL}, #{item.buyPrice,jdbcType=DECIMAL}, #{item.isExp,jdbcType=BIT},
        #{item.saleEnable,jdbcType=BIT}, #{item.productDate,jdbcType=DATE}, #{item.expDate,jdbcType=DATE},
        #{item.inDate,jdbcType=TIMESTAMP}, #{item.supplierId,jdbcType=BIGINT}, #{item.supplierContactId,jdbcType=BIGINT},
        #{item.buyerId,jdbcType=BIGINT}, #{item.orderId,jdbcType=BIGINT}, #{item.orderDetailId,jdbcType=BIGINT}, #{item.saleSate,jdbcType=BIT},
        #{item.createBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR},
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.customerId,jdbcType=BIGINT}, #{item.customerRepId,jdbcType=BIGINT},
        #{item.saleId,jdbcType=BIGINT}, #{item.backPrice,jdbcType=DECIMAL}, #{item.refType,jdbcType=VARCHAR}, #{item.refOrderId,jdbcType=BIGINT}
    </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yiban.erp.entities.RepertoryInfo" >
    update repertory_info
      <set >
          <if test="companyId != null" >
              company_id = #{companyId,jdbcType=INTEGER},
          </if>
          <if test="warehouseId != null" >
              warehouse_id = #{warehouseId,jdbcType=INTEGER},
          </if>
          <if test="location != null" >
              location = #{location,jdbcType=VARCHAR},
          </if>
          <if test="inUserId != null" >
              in_user_id = #{inUserId,jdbcType=BIGINT},
          </if>
          <if test="batchCode != null" >
              batch_code = #{batchCode,jdbcType=VARCHAR},
          </if>
          <if test="goodsId != null" >
              goods_id = #{goodsId,jdbcType=BIGINT},
          </if>
          <if test="factoryId != null" >
              factory_id = #{factoryId,jdbcType=BIGINT},
          </if>
          <if test="inQuantity != null" >
              in_quantity = #{inQuantity,jdbcType=DECIMAL},
          </if>
          <if test="quantity != null" >
              quantity = #{quantity,jdbcType=DECIMAL},
          </if>
          <if test="onWayQuantity != null">
              on_way_quantity = #{onWayQuantity,jdbcType=DECIMAL},
          </if>
          <if test="buyPrice != null" >
              buy_price = #{buyPrice,jdbcType=DECIMAL},
          </if>
          <if test="isExp != null" >
              is_exp = #{isExp,jdbcType=BIT},
          </if>
          <if test="saleEnable != null" >
              sale_enable = #{saleEnable,jdbcType=BIT},
          </if>
          <if test="productDate != null" >
              product_date = #{productDate,jdbcType=DATE},
          </if>
          <if test="expDate != null" >
              exp_date = #{expDate,jdbcType=DATE},
          </if>
          <if test="inDate != null" >
              in_date = #{inDate,jdbcType=TIMESTAMP},
          </if>
          <if test="supplierId != null" >
              supplier_id = #{supplierId,jdbcType=BIGINT},
          </if>
          <if test="supplierContactId != null" >
              supplier_contact_id = #{supplierContactId,jdbcType=BIGINT},
          </if>
          <if test="buyerId != null" >
              buyer_id = #{buyerId,jdbcType=BIGINT},
          </if>
          <if test="orderId != null" >
              order_id = #{orderId,jdbcType=BIGINT},
          </if>
          <if test="orderDetailId != null" >
              order_detail_id = #{orderDetailId,jdbcType=BIGINT},
          </if>
          <if test="saleSate != null" >
              sale_sate = #{saleSate,jdbcType=BIT},
          </if>
          <if test="createBy != null" >
              create_by = #{createBy,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null" >
              create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateBy != null" >
              update_by = #{updateBy,jdbcType=VARCHAR},
          </if>
          <if test="updateTime != null" >
              update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="customerId != null" >
              customer_id = #{customerId,jdbcType=BIGINT},
          </if>
          <if test="customerRepId != null" >
              customer_rep_id = #{customerRepId,jdbcType=BIGINT},
          </if>
          <if test="saleId != null" >
              sale_id = #{saleId,jdbcType=BIGINT},
          </if>
          <if test="backPrice != null" >
              back_price = #{backPrice,jdbcType=DECIMAL},
          </if>
          <if test="refType != null" >
              ref_type = #{refType,jdbcType=VARCHAR},
          </if>
          <if test="refOrderId != null" >
              ref_order_id = #{refOrderId,jdbcType=BIGINT},
          </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getListByIdList" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from repertory_info
    where id in
    <foreach collection="idList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="getGoodNameWithLessQuantity" parameterType="java.lang.Long" resultType="java.lang.String">
    select
      gi.`name` as goodName
    from sell_order_detail d, repertory_info r, goods_detail g, goods_info gi
    where d.repertory_id = r.id and r.goods_id = g.id and g.goods_info_id = gi.id
    and (r.quantity - d.quantity &lt; 0)
    and d.sell_order_id = #{sellOrderId};
  </select>

  <update id="sellOrderConsumeQuantity" parameterType="map" >
    update sell_order_detail d, repertory_info r
      set r.quantity = (r.quantity - d.quantity),
          r.on_way_quantity = (r.on_way_quantity - d.quantity),
          r.update_time = #{updateTime},
          r.update_by = #{updateBy}
    where d.repertory_id = r.id and d.sell_order_id = #{sellOrderId}
  </update>

    <update id="buyBackConsumeQuantity" parameterType="map" >
        update repertory_in_back_detail b, repertory_info r
          set r.quantity = (r.quantity - b.back_quantity),
              r.on_way_quantity = (r.on_way_quantity - b.back_quantity),
              r.update_time = #{updateTime},
              r.update_by = #{updateBy}
        where b.repertory_info_id = r.id and b.in_back_id = #{inBackId}
    </update>

    <update id="buyBackReleaseOnWayQuantity" parameterType="java.lang.Long">
        update repertory_in_back_detail b, repertory_info r
          set
              r.on_way_quantity = (r.on_way_quantity - b.back_quantity)
        where
          b.repertory_info_id = r.id and b.in_back_id = #{inBackId}
    </update>

    <update id="sellOrderReleaseOnWayQuantity" parameterType="java.lang.Long">
        update sell_order_detail s, repertory_info r
          set
              r.on_way_quantity = (r.on_way_quantity - s.quantity)
        where
          b.repertory_info_id = r.id and s.sell_order_id = #{sellOrderId}
    </update>

    <update id="updateOnWayQuantity" parameterType="map" >
        update repertory_info
          set on_way_quantity = IFNULL(on_way_quantity, 0) + #{onWayQuantity}
        where id = #{id}
    </update>

  <select id="getBalance" parameterType="map" resultType="com.yiban.erp.dto.CurrentBalanceResp">
    select goods_id as goodsId, sum(quantity) as balance
    from repertory_info
    where warehouse_id = #{warehouseId}
    and goods_id in
    <foreach collection="goodsIdList" open="(" close=")" item="item" separator=",">
      #{item}
    </foreach>
    group by goods_id
  </select>

  <select id="getLastBuyPrice" parameterType="map" resultType="com.yiban.erp.dto.CurrentBalanceResp" >
    select t2.goods_id as goodsId, t2.buy_price as lastPrice from (
      select max(id) as id from repertory_info
        where goods_id in
          <foreach collection="goodsIdList" open="(" close=")" item="item" separator=",">
            #{item}
          </foreach>
        group by goods_id) t1, repertory_info t2
    where t1.id = t2.id;
  </select>
    <select id="queryRepertoryPage" resultMap="BaseResultMap" parameterType="com.yiban.erp.dto.RepertoryQuery" >
        select
        rp.*,
        su.id as supplierId, su.name AS supplierName, w.name AS warehouseName,inu.nickname AS in_user_name
        FROM repertory_info rp
            left JOIN goods_detail g ON rp.goods_id = g.id
            LEFT JOIN supplier su ON su.id=rp.supplier_id
            LEFT JOIN warehouse w ON w.id=rp.warehouse_id
            LEFT JOIN users  inu ON inu.id=rp.in_user_id
        where  1=1
        <if test="companyId != null" >
            and rp.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="warehouseId != null" >
            and rp.warehouse_id = #{warehouseId, jdbcType=BIGINT}
        </if>
        <if test="storeState != null" >
            and rp.store_state = #{storeState,jdbcType=STRING}
        </if>
        <if test="saleState != null" >
            and rp.sale_state = #{saleState,jdbcType=STRING}
        </if>
        <if test="goodsId != null" >
            and rp.goods_id = #{goodsId,jdbcType=BIGINT}
        </if>
        <if test="supplierId != null" >
            and rp.supplier_id = #{supplierId,jdbcType=BIGINT}
        </if>
        <if test="goodSearch != null">
            <bind name="pattern" value="'%' + goodSearch + '%'" />
            and ( g.name like #{pattern} or lower(g.pinyin) like lower(#{pattern}) )
        </if>

        <if test="maxInDate != null" >
            and #{maxInDate,jdbcType=TIMESTAMP}>= rp.in_date
        </if>
        and rp.quantity > 0
        order by rp.id desc
        <if test="offset != null and offset != null">
            limit #{offset}, #{size}
        </if>
    </select>

    <select id="queryRepertoryCount"  resultType="java.lang.Integer" parameterType="com.yiban.erp.dto.RepertoryQuery" >
        select
        count(1)
        FROM repertory_info rp
        left JOIN goods_detail g ON rp.goods_id = g.id
        where 1=1
        <if test="companyId != null" >
            and rp.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="warehouseId != null" >
            and rp.warehouse_id = #{warehouseId, jdbcType=BIGINT}
        </if>
        <if test="storeState != null" >
            and rp.store_state = #{storeState,jdbcType=STRING}
        </if>
        <if test="goodsId != null" >
            and rp.goods_id = #{goodsId,jdbcType=BIGINT}
        </if>
        <if test="saleState != null" >
            and rp.sale_state = #{saleState,jdbcType=STRING}
        </if>

        <if test="supplierId != null" >
            and rp.supplier_id = #{supplierId,jdbcType=BIGINT}
        </if>
        <if test="goodSearch != null">
            <bind name="pattern" value="'%' + goodSearch + '%'" />
            and ( g.name like #{pattern} or lower(g.pinyin) like lower(#{pattern}) )
        </if>

        <if test="maxInDate != null" >
            and #{maxInDate,jdbcType=TIMESTAMP}>= rp.in_date
        </if>
        and rp.quantity >0

    </select>

    <select id="querySelectCount" resultType="java.lang.Integer" parameterType="com.yiban.erp.dto.RepertorySelectQuery">
        select count(1)
        from repertory_info
        where company_id = #{query.companyId}
        <if test="query.warehouseId != null" >
            and warehouse_id = #{query.warehouseId}
        </if>
        <if test="query.goodsId != null" >
            and goods_id = #{query.goodsId}
        </if>
        <if test="query.supplierId != null">
            and supplier_id = #{query.supplierId}
        </if>
        <if test="query.batchCode != null">
            <bind name="pattern" value="'%' + batchCode + '%'"/>
            and batch_code like #{pattern}
        </if>
        <if test="goodsIds != null and goodsIds.size() > 0" >
            and goods_id in
            <foreach collection="goodsIds" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="query.minQuantity != null" >
            and quantity > #{query.minQuantity}
        </if>
    </select>

    <select id="querySelectList" resultMap="BaseResultMap">
        select
          r.*, s.name as supplierName, w.name as warehouseName
        from repertory_info r
        left join supplier s on r.supplier_id = s.id
        left join warehouse w on r.warehouse_id = w.id
        where r.company_id = #{query.companyId}
        <if test="query.warehouseId != null" >
            and r.warehouse_id = #{query.warehouseId}
        </if>
        <if test="query.goodsId != null" >
            and r.goods_id = #{query.goodsId}
        </if>
        <if test="query.supplierId != null">in
            and r.supplier_id = #{query.supplierId}
        </if>
        <if test="query.batchCode != null">
            <bind name="pattern" value="'%' + batchCode + '%'"/>
            and r.batch_code like #{pattern}
        </if>
        <if test="query.minQuantity != null" >
            and r.quantity > #{query.minQuantity}
        </if>
        <if test="goodsIds != null and goodsIds.size() > 0" >
            and r.goods_id in
        <foreach collection="goodsIds" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
        </if>
        <if test="query.byPage != null  and query.offset != null and query.limit != null">
            limit #{query.offset}, #{query.limit}
        </if>

    </select>

    <select id="getGoodsId" resultType="java.lang.Long" >
        select
        goods_info_id
        from goods_attribute_ref
        where 1=1
        <if test="attrId != null" >
            and att_id = #{attrId}
        </if>
        <if test="attrValue != null" >
            and att_value = #{attrValue}
        </if>
    </select>



</mapper>