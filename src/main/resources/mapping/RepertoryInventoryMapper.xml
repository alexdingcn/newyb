<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.RepertoryInventoryMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.RepertoryInventory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="order_name" property="orderName" jdbcType="VARCHAR" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="check_user" property="checkUser" jdbcType="BIGINT" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, order_number, order_name, warehouse_id, status, check_user, check_time, 
    comment, created_by, created_time, updated_by, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from repertory_inventory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repertory_inventory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yiban.erp.entities.RepertoryInventory" keyProperty="id" useGeneratedKeys="true" >
    insert into repertory_inventory (company_id, order_number,
      order_name, warehouse_id, status, 
      check_user, check_time, comment, 
      created_by, created_time, updated_by, 
      updated_time)
    values (#{companyId,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR},
      #{orderName,jdbcType=VARCHAR}, #{warehouseId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{checkUser,jdbcType=BIGINT}, #{checkTime,jdbcType=TIMESTAMP}, #{comment,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yiban.erp.entities.RepertoryInventory" >
    update repertory_inventory
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderName != null" >
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        check_user = #{checkUser,jdbcType=BIGINT},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getOrderList" resultMap="BaseResultMap" parameterType="com.yiban.erp.dto.InventorySearch">
    select
      i.*, w.name as warehouseName, u.nickname as checkUserName
    from repertory_inventory i
    left join warehouse w on i.warehouse_id = w.id
    left join users u on i.check_user = u.id
    where i.company_id = #{companyId}
    <if test="searchValue != null">
      <bind name="patten" value="'%' + searchValue + '%'"/>
      and (i.order_number like #{patten} or i.order_name like #{patten})
    </if>
    <if test="warehouseId != null" >
      and i.warehouse_id = #{warehouseId}
    </if>
    <if test="statusList != null" >
      and i.status in
      <foreach collection="statusList" item="item" open="(" close=")" separator="," >
        #{item}
      </foreach>
    </if>
    <if test="startDate != null">
      and i.created_time >= #{startDate}
    </if>
    <if test="endDate != null" >
      and #{endDate} > i.created_time
    </if>
    order by i.id asc
    <if test="limit != null and offset != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="getInventory" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
      i.*, w.name as warehouseName, u.nickname as checkUserName
    from repertory_inventory i
    left join warehouse w on i.warehouse_id = w.id
    left join users u on i.check_user = u.id
    where i.id = #{inventoryId}
  </select>

  <select id="getOrderListCount" resultType="java.lang.Integer" parameterType="com.yiban.erp.dto.InventorySearch">
    select
      count(1)
    from repertory_inventory i
    where i.company_id = #{companyId}
    <if test="searchValue != null">
      <bind name="patten" value="'%' + searchValue + '%'"/>
      and (i.order_number like #{patten} or i.order_name like #{patten})
    </if>
    <if test="warehouseId != null" >
      and i.warehouse_id = #{warehouseId}
    </if>
    <if test="statusList != null" >
      and i.status in
      <foreach collection="statusList" item="item" open="(" close=")" separator="," >
        #{item}
      </foreach>
    </if>
    <if test="startDate != null">
      and i.created_time >= #{startDate}
    </if>
    <if test="endDate != null" >
      and #{endDate} > i.created_time
    </if>
  </select>

  <select id="warehouseHaveUncheckCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
      count(1)
    from repertory_inventory
    where warehouse_id = #{warehouseId}
      and status = 'UNCHECK'
  </select>

</mapper>