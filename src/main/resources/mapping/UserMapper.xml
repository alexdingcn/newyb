<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="forget_token" property="forgetToken" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="super_user" property="superUser" jdbcType="BIT" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, nickname, mobile, realname, email, phone, idcard, forget_token, address, 
    birthday, sex, status, super_user, comment, avatar_url, created_by, updated_by, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT} and status >= 0
  </select>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from users
    where status >= 0 and company_id = #{companyId}
  </select>

  <select id="findUserByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      u.id, u.company_id, u.nickname, mobile, u.realname, u.email, u.phone, u.idcard, u.forget_token, u.address,
      u.birthday, u.sex, u.status, u.super_user, u.comment, u.avatar_url, u.created_by, u.updated_by, u.created_time, u.updated_time,
      c.name as companyName
    from users u, company c
    where u.company_id = c.id and u.nickname = #{nickname} and u.status >= 0
  </select>

  <select id="findUserByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      u.id, u.company_id, u.nickname, mobile, u.realname, u.email, u.phone, u.idcard, u.forget_token, u.address,
      u.birthday, u.sex, u.status, u.super_user, u.comment, u.avatar_url, u.created_by, u.updated_by, u.created_time, u.updated_time,
      c.name as companyName
    from users u, company c
    where u.company_id = c.id and u.mobile = #{mobile} and u.status >= 0
  </select>

  <select id="getDetailById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      u.id, u.company_id, u.nickname, mobile, u.realname, u.email, u.phone, u.idcard, u.forget_token, u.address,
      u.birthday, u.sex, u.status, u.super_user, u.comment, u.avatar_url, u.created_by, u.updated_by, u.created_time, u.updated_time,
      c.name as companyName
    from users u, company c
    where u.company_id = c.id and u.id = #{userId} and u.status >= 0
  </select>

  <select id="findUserByNameOrMobile" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    u.id, u.company_id, u.nickname, mobile, u.realname, u.email, u.phone, u.idcard, u.forget_token, u.address,
    u.birthday, u.sex, u.status, u.super_user, u.comment, u.avatar_url, u.created_by, u.updated_by, u.created_time, u.updated_time,
    ua.identifier as identifier, ua.identifier_type as identifier_type, ua.credential as credential
    from users u, user_auths ua
    where u.id = ua.user_id
    and ua.identifier = #{identifier, jdbcType=VARCHAR}
    and (ua.identifier_type = 'USERNAME' or ua.identifier_type = 'MOBILE')
    and u.status >= 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yiban.erp.entities.User" useGeneratedKeys="true" keyProperty="id">
    insert into users (company_id, nickname,
      mobile, realname, email, 
      phone, idcard, forget_token, 
      address, birthday, sex, status, super_user, avatar_url,
      comment, created_by, updated_by, 
      created_time, updated_time)
    values (#{companyId,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR},
      #{mobile,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{forgetToken,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{sex,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{superUser, jdbcType=BIT}, #{avatarUrl,jdbcType=VARCHAR},
      #{comment,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR},
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yiban.erp.entities.User" useGeneratedKeys="true" keyProperty="id">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="forgetToken != null" >
        forget_token,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="superUser != null">
        super_user,
      </if>
      <if test="comment != null" >
        comment,
      </if>
        <if test="avatarUrl != null" >
            avatar_url,
        </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="forgetToken != null" >
        #{forgetToken,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="superUser != null" >
        #{superUser, jdbcType=BIT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
        <if test="avatarUrl != null" >
            #{avatarUrl,jdbcType=VARCHAR},
        </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiban.erp.entities.User" >
    update users
    <set >
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="forgetToken != null" >
        forget_token = #{forgetToken,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="superUser != null" >
        super_user = #{superUser, jdbcType=BIT},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
        <if test="avatarUrl != null" >
            avatar_url = #{avatarUrl,jdbcType=VARCHAR},
        </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiban.erp.entities.User" >
    update users
    set
      realname = #{realname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      forget_token = #{forgetToken,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      super_user = #{superUser, jdbcType=BIT},
      comment = #{comment,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateMobile" parameterType="com.yiban.erp.entities.User">
    update users
      set
        mobile = #{mobile},
        updated_by = #{updatedBy,jdbcType=VARCHAR},
        updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateNickName" parameterType="com.yiban.erp.entities.User">
    update users
      set
        nickname = #{nickname},
        updated_by = #{updatedBy,jdbcType=VARCHAR},
        updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateUserStatusToDelete" parameterType="com.yiban.erp.entities.User">
    update users
      set
        nickname = #{nickname},
        mobile = #{mobile},
        status = #{status},
        updated_by = #{updatedBy},
        updated_time = #{updatedTime}
    where id = #{id}
  </update>

</mapper>