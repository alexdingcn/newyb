<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiban.erp.dao.GoodsCareMapper" >
  <resultMap id="BaseResultMap" type="com.yiban.erp.entities.GoodsCare" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_no" property="goodsNo" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="care_result" property="careResult" jdbcType="VARCHAR" />
    <result column="care_person" property="carePerson" jdbcType="VARCHAR" />
    <result column="temperature" property="temperature" jdbcType="DOUBLE" />
    <result column="fname" property="fname" jdbcType="VARCHAR"/>
    <result column="create_date" property="createDate" jdbcType="DATE"/>
    <result column="next_date" property="nextDate" jdbcType="DATE"/>
  </resultMap>
  <select id="searchListCount" parameterType="com.yiban.erp.dto.GoodsQuery" resultType="java.lang.Long">
      select count(1)
      from goods_info
      where company_id = #{companyId} and status != 'DELETE' and need_care = '1'
      <if test="search != null">
        <bind name="patten" value="'%' + search + '%'"/>
        and (name LIKE #{patten} or pinyin LIKE #{patten} or goods_no LIKE #{patten})
      </if>
  </select>

  <select id="searchList" parameterType="com.yiban.erp.dto.GoodsQuery" resultMap="BaseResultMap">
    select g.id, g.goods_no, g.name,f.name as fname
    from goods_info as g, factory as f
    where g.factory_id = f.id and g.company_id = #{companyId} and g.status != 'DELETE' and g.need_care = '1'
    <if test="search != null">
      <bind name="patten" value="'%' + search + '%'"/>
      and (g.name LIKE #{patten} or g.goods_no LIKE #{patten})
    </if>
    order by g.id desc
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="careList" resultMap="BaseResultMap">
    select * from
    (select * from
    (select gi.id,gi.name,gc.create_date,gc.next_date
    from goods_care as gc,goods_info as gi
    where gc.goods_id = gi.id
    order by gc.next_date desc)  as a
    group by a.id) as b
    where (1=1)
    <if test="nextDate != null">
      <![CDATA[
      and  b.next_date <= #{nextDate}
      ]]>
    </if>
    <if test="nextDate == null">
      <![CDATA[
      and b.next_date <= current_date ()
      ]]>
    </if>
  </select>

  <insert id="save" parameterType="com.yiban.erp.entities.GoodsCare" keyProperty="id" useGeneratedKeys="true" >
    insert into goods_care (goods_id, care_result,
    care_person, temperature, create_date, next_date)
    values (#{goodsId,jdbcType=BIGINT}, #{careResult,jdbcType=VARCHAR},
    #{carePerson,jdbcType=VARCHAR}, #{temperature,jdbcType=DOUBLE}, curdate(), #{nextDate, jdbcType=DATE})
  </insert>

  <select id="searchRecordCount" parameterType="com.yiban.erp.entities.GoodsCare" resultType="java.lang.Integer">
    select count(1)
    from goods_care as gc,goods_info as gi
    where gc.goods_id = gi.id and status != 'DELETE' and need_care = '1'
    <if test="goodsId != null">
      and gc.goods_id = #{goodsId}
    </if>
  </select>

  <select id="searchRecord" parameterType="com.yiban.erp.entities.GoodsCare" resultMap="BaseResultMap">
    select gi.name, gc.care_result, gc.care_person,gc.temperature,gc.create_date,gc.next_date
    from goods_care as gc,goods_info as gi
    where gc.goods_id = gi.id and status != 'DELETE' and need_care = '1'
    <if test="goodsId != null">
     and  gc.goods_id= #{goodsId}
    </if>
    order by gc.id desc
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="queryGoods"  resultMap="BaseResultMap">
    select gi.name
    from goods_info as gi
    where (1=1)
    <if test="goodsId != null">
      and  gi.id= #{goodsId}
    </if>
    limit 1
  </select>
</mapper>